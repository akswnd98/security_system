<버퍼 오버플로우>

	- gets, strcpy와 같은 함수의 취약점을 이용.
	- 원하는 위치에 원하는 값으로 변조

</버퍼 오버플로우>

<SETUID>

	

</SETUID>

<SETGID>

	

</SETGID>

* shell code

<shell code 작성>

	- 라이브러리 함수를 사용할 수 없다.(타겟의 주소가 바뀜.)
	- 함수의 인자를 미리 만들 수 없다.

	- 그래서 시스템 콜을 사용.
	- 하지만 역시 인자를 가져 올 수 없음.

	- getuid: 24번
	- geteuid: 49번

	* shell code 내의 null을 다 지워야함.
	* 하지만 문자열 끝의 null을 지울 수는 없다.
	* 명령어 내의 0은 xor같은 명령어를 이용하여 우회 가능.
	* 코드 거의 맨 뒤에 call을 쓰고 바로 뒤에 문자열을 써넣고 0x00을 쓸 수 있게 우회.

</shell code 작성>

* execve 시스템콜이 c언어의 system함수와 같다. 11번